@page "/courses"
@using BackOffice.Data
@attribute [StreamRendering]
@inject HttpClient Http

<PageTitle>Courses</PageTitle>



<h1>Courses</h1>


@* <a href="/courses/create" class="btn-theme">Create Course</a> *@
<a href="/courses/allcourses" class="btn-theme">See All Courses</a>
@* <a href="/courses/courses/{id}" class="btn-theme">Get Courses</a> *@
<a href="/courses/updatecourse" class="btn-theme">Update Course</a>
<a href="/courses/delete" class="btn-theme">Delete Course</a>


@* @if (courses == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var user in users)
    {
        <div class="mb-3">@user.FirstName @user.LastName</div>
    }

}

@code {
    private ApplicationUser[]? users;

    protected override async Task OnInitializedAsync()
    {
        users = await Http.GetFromJsonAsync<ApplicationUser[]>("http://localhost:7278/api/GetUsers");
    }



    public class ApplicationUser
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public object Biography { get; set; }
        public string ProfilePicture { get; set; }
        public object AddressId { get; set; }
        public object Address { get; set; }
        public object SavedCourses { get; set; }
        public string Id { get; set; }
        // public string UserName { get; set; }
        // public string NormalizedUserName { get; set; }
        public string Email { get; set; }
        // public string NormalizedEmail { get; set; }
        // public bool EmailConfirmed { get; set; }
        // public string PasswordHash { get; set; }
        // public string SecurityStamp { get; set; }
        // public string ConcurrencyStamp { get; set; }
        // public object PhoneNumber { get; set; }
        // public bool PhoneNumberConfirmed { get; set; }
        // public bool TwoFactorEnabled { get; set; }
        // public object LockoutEnd { get; set; }
        // public bool LockoutEnabled { get; set; }
        // public int AccessFailedCount { get; set; }

    } *@

@* } *@